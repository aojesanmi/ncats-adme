{"version":3,"sources":["webpack:///src/app/loading/loading.service.ts","webpack:///src/app/google-analytics/track-link-event/track-link-event.directive.ts","webpack:///src/app/text-file/text-file.component.ts","webpack:///src/app/text-file/text-file.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/text-file/file-type-defaults.constant.ts","webpack:///src/app/config/config.service.ts","webpack:///src/app/sketcher/sketcher.module.ts","webpack:///src/app/method/method.component.ts","webpack:///src/app/method/method.component.html","webpack:///src/app/predictions-table/predictions-table.component.ts","webpack:///src/app/predictions-table/predictions-table.component.html","webpack:///src/app/utilities/file-select.directive.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/predictions/predictions.component.ts","webpack:///src/app/predictions/predictions.component.html","webpack:///src/app/config/config.factory.ts","webpack:///src/app/app.module.ts","webpack:///src/app/contact/contact.component.ts","webpack:///src/app/contact/contact.component.html","webpack:///src/app/google-analytics/google-analytics.service.ts","webpack:///src/app/loading/loading.component.ts","webpack:///src/app/loading/loading.component.html","webpack:///src/app/utilities/deploy-url.ts","webpack:///src/app/sketcher/sketcher.component.ts","webpack:///src/app/sketcher/sketcher.component.html","webpack:///src/app/structure-image-dialog/structure-image-dialog.component.ts","webpack:///src/app/structure-image-dialog/structure-image-dialog.component.html","webpack:///src/app/page-not-found/page-not-found.component.ts","webpack:///src/app/page-not-found/page-not-found.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/structure-image/structure-image.directive.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["LoadingService","loadingStateEmitter","isLoading","next","asObservable","providedIn","TrackLinkEventDirective","gaService","evCategory","evAction","element","evLabel","href","sendEvent","evValue","selector","onClick","TextFileComponent","fileType","options","lineBreak","columnSeparator","hasHeaderRow","indexIdentifierColumn","fileUploadStarted","fileDataAdded","fileUploadFinished","fileProcess","subscriptions","localStorage","getItem","JSON","parse","acceptedFileTypes","Object","keys","forEach","subscription","unsubscribe","file","selectedFile","selectedFileName","name","fileNameParts","split","fileExtension","length","indexOf","updateType","fileReader","FileReader","onload","selectedFileContent","result","readAsText","setItem","stringify","fileForm","emit","fileSelected","updateOptions","processFile","templateUrl","styleUrls","HomeComponent","environment","production","apiBaseUrl","configFileLocation","googleAnalyticsId","fileTypeDefaults","csv","text","smi","ConfigService","http","baseHref","deployUrl","_configData","configFilePath","get","toPromise","then","config","err","Promise","resolve","configData","SketcherModule","declarations","imports","exports","MethodComponent","domSanatizer","activatedRoute","model","dataDownloadHref","bypassSecurityTrustResourceUrl","params","subscribe","PredictionsTableComponent","dialog","data","displayData","page","pageSize","dataHandling","errorMessages","download","pageEvent","clearErrorMessage","pageIndex","paged","startIndex","i","push","sort","active","direction","slice","a","b","isAsc","compare","pageChange","errorMessage","predictionColumns","displayedColumnsDict","filter","key","isSmilesColumn","item","emptyColumns","column","allColumns","open","smiles","predictions","mainColumnsDict","displayedColumns","order","columns","getNonEmptyPredictions","predition","concat","hasErrors","predictionsData","FileSelectDirective","el","addHiddenFileInput","document","body","removeChild","fileInputElement","createElement","setAttribute","style","width","height","overflow","accept","onchange","event","target","files","preventDefault","appendChild","clickFileInputElement","click","nativeElement","addEventListener","AppComponent","iconRegistry","sanitizer","router","_document","addSvgIcon","getElementById","routerSubscription","events","sendPageView","state","root","firstChild","pageTitle","url","HTMLDocument","PredictionsComponent","loadingService","configService","sketcherDisplayedColumns","sketcherIndexIdentifierColumn","models","tabLabels","RLM","PAMPA","Solubility","CYP450","link","setLoadingState","response","sketcherData","error","formData","FormData","append","toString","join","fileIndexIdentifierColumn","post","fileData","dataKeys","lines","map","Blob","type","downloadFile","window","URL","createObjectURL","category","tab","textLabel","selectedTabChange","processSketcherInput","configServiceFactory","startupService","load","AppModule","provide","useFactory","deps","multi","s","getBaseHrefFromDOM","entryComponents","providers","bootstrap","ContactComponent","vishalImgSrc","pranavImgSrc","jorgeImgSrc","jordanImgSrc","noelImgSrc","trungImgSrc","xinImgSrc","rdkitImgSrc","pythonImgSrc","angularImgSrc","epamImgSrc","GoogleAnalyticsService","platformId","isActive","googleAnanlyticsId","init","gtag","send_page_view","errorDescription","message","filename","lineno","colno","sendException","title","path","location","sendFields","page_title","page_path","console","log","eventAction","eventCategory","eventLabel","eventValue","event_category","event_label","value","exDescription","exFatal","description","fatal","onGlobalError","LoadingComponent","lodadingService","DEPLOY_URL","SketcherComponent","moleculeInput","ketcherSrc","ketcherFrame","ketcher","contentWindow","getSmiles","addMolecule","StructureImageDialogComponent","PageNotFoundComponent","routes","component","AppRoutingModule","forRoot","relativeLinkResolution","StructureImageDirective","privateStereo","isAfterViewInit","imageElement","setImageSrc","srcUrl","encodeURIComponent","privateEntityId","src","alt","version","privateVersion","entityId","size","privateSize","showStereo","atomMaps","privateAtomMaps","stereo","scripts","getElementsByTagName","index","mainScript","replace","DEPLOY_URL_PROVIDER","useValue","webpackEmptyAsyncContext","req","e","Error","code","module","id"],"mappings":"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ACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AAAgP;;AAAK;;AAAC;;AAAM;;AAChQ;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AAAK;;AAAkB;;AACvB;;AAAK;;AAAkB;;AACvB;;AAAK;;AAAU;;AACnB;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAK;;AAAS;;AACd;;AAAK;;AAAC;;AACN;;AAAK;;AAAQ;;AACjB;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoadingService {\r\n  private loadingStateEmitter: Subject<boolean> = new Subject<boolean>();\r\n\r\n  constructor() {}\r\n\r\n  get isLoading(): Observable<boolean> {\r\n    return this.loadingStateEmitter.asObservable();\r\n  }\r\n\r\n  setLoadingState(isLoading: boolean): void {\r\n    this.loadingStateEmitter.next(isLoading);\r\n  }\r\n}\r\n","import { Directive, HostListener, Input } from '@angular/core';\r\nimport { GoogleAnalyticsService } from '../google-analytics.service';\r\n\r\n@Directive({\r\n  selector: '[admeTrackLinkEvent]'\r\n})\r\nexport class TrackLinkEventDirective {\r\n  @Input() evCategory = 'Undefined';\r\n  @Input() evAction = 'click-link';\r\n  @Input() evLabel: string;\r\n  @Input() evValue: number;\r\n\r\n  constructor(\r\n    private gaService: GoogleAnalyticsService\r\n  ) {}\r\n\r\n  @HostListener('click', ['$event.target'])\r\n  onClick(element: HTMLAnchorElement) {\r\n    this.evLabel = element.href;\r\n    this.gaService.sendEvent(this.evAction, this.evCategory, this.evLabel, this.evValue);\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, OnDestroy, Input } from '@angular/core';\r\nimport { fileTypeDefaults } from './file-type-defaults.constant';\r\nimport { Subscription } from 'rxjs';\r\nimport { FileForm } from './file-form.model';\r\n\r\n@Component({\r\n  selector: 'adme-text-file',\r\n  templateUrl: './text-file.component.html',\r\n  styleUrls: ['./text-file.component.scss']\r\n})\r\nexport class TextFileComponent implements OnInit, OnDestroy {\r\n  selectedFile: File;\r\n  selectedFileName: string;\r\n  selectedFileContent: string | ArrayBuffer;\r\n  fileType = 'csv';\r\n  options = {\r\n    lineBreak: '\\n',\r\n    columnSeparator: '\\t',\r\n    hasHeaderRow: true,\r\n    indexIdentifierColumn: 0\r\n  };\r\n  @Output() fileUploadStarted = new EventEmitter<number>();\r\n  @Output() fileDataAdded = new EventEmitter<Array<string>>();\r\n  @Output() fileUploadFinished = new EventEmitter<void>();\r\n  @Output() fileProcess = new EventEmitter<FileForm>();\r\n  private subscriptions: Array<Subscription> = [];\r\n  private acceptedFileTypes: Array<string>;\r\n  constructor(\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const fileType = localStorage.getItem('fileType');\r\n    if (fileType) {\r\n      this.fileType = fileType;\r\n    }\r\n\r\n    const options = localStorage.getItem(`${this.fileType}_options`);\r\n    if (options) {\r\n      this.options = JSON.parse(options);\r\n    } else {\r\n      this.options = fileTypeDefaults[this.fileType];\r\n    }\r\n    this.acceptedFileTypes = Object.keys(fileTypeDefaults);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(subscription => {\r\n      subscription.unsubscribe();\r\n    });\r\n  }\r\n\r\n  @Input()\r\n\r\n  fileSelected(file: File): void {\r\n    if (file) {\r\n      this.selectedFile = file;\r\n      this.selectedFileName = file.name;\r\n      const fileNameParts = this.selectedFileName.split('.');\r\n      const fileExtension = fileNameParts[fileNameParts.length - 1];\r\n      if (this.acceptedFileTypes.indexOf(fileExtension) > -1) {\r\n        this.fileType = fileExtension;\r\n        this.updateType();\r\n      }\r\n      const fileReader = new FileReader();\r\n      fileReader.onload = () => {\r\n        this.selectedFileContent = fileReader.result;\r\n      };\r\n      fileReader.readAsText(file);\r\n    } else {\r\n      this.selectedFile = null;\r\n      this.selectedFileName = null;\r\n      this.selectedFileContent = null;\r\n    }\r\n  }\r\n\r\n  updateType() {\r\n    localStorage.setItem('fileType', this.fileType);\r\n    const options = localStorage.getItem(`${this.fileType}_options`);\r\n    if (options) {\r\n      this.options = JSON.parse(options);\r\n    } else {\r\n      this.options = fileTypeDefaults[this.fileType];\r\n    }\r\n  }\r\n\r\n  updateOptions(): void {\r\n    const options = JSON.stringify(this.options);\r\n    localStorage.setItem(`${this.fileType}_options`, options);\r\n  }\r\n\r\n  processFile() {\r\n    const fileForm: FileForm = {\r\n      lineBreak: this.options.lineBreak,\r\n      columnSeparator: this.options.columnSeparator,\r\n      hasHeaderRow: this.options.hasHeaderRow,\r\n      indexIdentifierColumn: this.options.indexIdentifierColumn,\r\n      file: this.selectedFile\r\n    };\r\n    this.fileProcess.emit(fileForm);\r\n    // const rows = this.selectedFileContent.toString().split(/\\r\\n|\\r|\\n/g);\r\n    // if (rows.length === 1) {\r\n    //   alert('Either your file does not have any data or you have selected the wrong line break');\r\n    // } else {\r\n    //   const identifiers = [];\r\n    //   for (let i = this.options.numHeaderRows; i < rows.length; i++) {\r\n    //     const cells = rows[i].split(this.options.columnSeparator);\r\n    //     if (cells[this.options.indexIdentifierColumn]) {\r\n    //       identifiers.push(cells[this.options.indexIdentifierColumn]);\r\n    //     }\r\n    //   }\r\n    //   this.fileUploadStarted.emit(identifiers.length);\r\n    // }\r\n  }\r\n\r\n}\r\n","<div class=\"text-file-body\">\r\n    <div class=\"description\">\r\n        Select a text file containing a list of smiles, but try to keep the size of the data to under 10,000 rows. Anything above 10,000 rows may take several minutes. If you have an Excel file, follow <a href=\"https://support.office.com/en-us/article/import-or-export-text-txt-or-csv-files-5250ac4c-663c-47ce-937b-339e391393ba\" target=\"_blank\">these instructions</a> to export it as Text or CSV. \r\n    </div>\r\n    <div>\r\n        <button mat-raised-button color=\"primary\" admeFileSelect (selectedFile)=\"fileSelected($event)\">Browse</button>\r\n        <span>\r\n            &nbsp;\r\n            {{selectedFileName ? 'Selected file: ' + selectedFileName : 'No file selected'}}\r\n        </span>\r\n    </div>\r\n    <form #textFileForm=\"ngForm\" class=\"text-file-form\">\r\n        <div class=\"form-body\">\r\n            <div class=\"file-type\">\r\n                <mat-form-field>\r\n                    <mat-label>File type</mat-label>\r\n                    <mat-select [(ngModel)]=\"fileType\" name=\"fileType\" required (selectionChange)=\"updateType()\">\r\n                        <mat-option value=\"csv\">\r\n                            CSV\r\n                        </mat-option>\r\n                        <mat-option value=\"text\">\r\n                            Text\r\n                        </mat-option>\r\n                        <mat-option value=\"smi\">\r\n                            SMI\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"column-separator\">\r\n                <mat-form-field>\r\n                    <mat-label>Column separator</mat-label>\r\n                    <mat-select [(ngModel)]=\"options.columnSeparator\" name=\"columnSeparator\" required\r\n                        (selectionChange)=\"updateOptions()\" matTooltip=\"Set of characters used to separate columns\">\r\n                        <mat-option [value]=\"','\">\r\n                            Comma (,)\r\n                        </mat-option>\r\n                        <mat-option [value]=\"'\\t'\">\r\n                            Tab (\\t)\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"header-row\">\r\n                <mat-form-field>\r\n                    <mat-label>Has header row</mat-label>\r\n                    <mat-select [(ngModel)]=\"options.hasHeaderRow\" name=\"hasHeaderRow\" required\r\n                        (selectionChange)=\"updateOptions()\" matTooltip=\"True if dataset has a header row and false if it doesn't\">\r\n                        <mat-option [value]=\"true\">\r\n                            Yes\r\n                        </mat-option>\r\n                        <mat-option [value]=\"false\">\r\n                            No\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"smiles-column-number\">\r\n                <mat-form-field>\r\n                    <input type=\"number\" matInput placeholder=\"SMILES column number\"\r\n                        [(ngModel)]=\"options.indexIdentifierColumn\" name=\"indexIdentifierColumn\" required\r\n                        matTooltip=\"The column number that contains the SMILES starting from 0.\"\r\n                        (change)=\"updateOptions()\">\r\n                    <mat-hint>Zero indicates that the SMILES are in the first column</mat-hint>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-actions\">\r\n            <span class=\"space-between\"></span>\r\n            <button mat-raised-button color=\"primary\"\r\n                [disabled]=\"textFileForm.invalid || !selectedFileName || !selectedFileContent\" (click)=processFile()>\r\n                Process file\r\n            </button>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'adme-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  ngOnInit() {}\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"inner-container\">\r\n        <h2>\r\n            Background\r\n        </h2>\r\n\r\n        <p style=\"text-align: justify;\">\r\n            ADME@NCATS is a resource developed for the scientific community by NCATS to host in silico prediction models\r\n            for different ADME endpoints. The resource allows prediction of different pharmacokinetic properties of\r\n            small molecules which is potentially useful for structure optimization in early drug discovery. Users can\r\n            provide input as a CSV/Text file containing SMILES. Alternatively, the users can sketch a molecule using the editor provided. For\r\n            each compound, the predictions from the models are provided as output along with the confidence scores. Those users who cannot upload their data are encouraged to\r\n            <a href=\"https://github.com/ncats/ncats-adme/\" target=\"_blank\" admeTrackLinkEvent evLabel=\"github\">download the self-contained instance of ADME@NCATS</a> that can be run locally.\r\n        </p>\r\n        <p style=\"text-align: justify;\">\r\n            A subset of data that were used for developing the models are provided for download. The users are\r\n            encouraged to use these data for development and validation of future QSAR models.\r\n        </p>\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiBaseUrl: '/',\r\n  configFileLocation: null,\r\n  googleAnalyticsId: null\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export const fileTypeDefaults = {\r\n    csv: {\r\n        lineBreak: '\\n',\r\n        columnSeparator: ',',\r\n        hasHeaderRow: true,\r\n        indexIdentifierColumn: 0\r\n    },\r\n    text: {\r\n        lineBreak: '\\n',\r\n        columnSeparator: '\\t',\r\n        hasHeaderRow: true,\r\n        indexIdentifierColumn: 0\r\n    },\r\n    smi: {\r\n        lineBreak: '\\n',\r\n        columnSeparator: '\\t',\r\n        hasHeaderRow: false,\r\n        indexIdentifierColumn: 0\r\n    }\r\n};\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Config } from './config.model';\r\nimport { environment } from 'src/environments/environment';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { DEPLOY_URL } from '../utilities/deploy-url';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ConfigService {\r\n    // tslint:disable-next-line:variable-name\r\n    private _configData: Config;\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        @Inject(APP_BASE_HREF) public baseHref: string,\r\n        @Inject(DEPLOY_URL) private deployUrl: string\r\n    ) { }\r\n\r\n    // This is the method you want to call at bootstrap\r\n    // Important: It should return a Promise\r\n    load(): Promise<any> {\r\n        this._configData = null;\r\n        const configFilePath = environment.configFileLocation ?\r\n            environment.configFileLocation : `${this.deployUrl || '/'}assets/data/config.json`;\r\n\r\n        return this.http\r\n            .get(configFilePath)\r\n            .toPromise()\r\n            .then((config: Config) => {\r\n                if (config.apiBaseUrl == null && environment.apiBaseUrl != null) {\r\n                    config.apiBaseUrl = environment.apiBaseUrl;\r\n                }\r\n                if (config.googleAnalyticsId == null && environment.googleAnalyticsId != null) {\r\n                    config.googleAnalyticsId = environment.googleAnalyticsId;\r\n                }\r\n\r\n                this._configData = config;\r\n            })\r\n            .catch((err: any) => Promise.resolve());\r\n    }\r\n\r\n    get configData(): Config {\r\n        return this._configData;\r\n    }\r\n\r\n    set configData(configData: Config) {\r\n        this._configData = configData;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SketcherComponent } from './sketcher.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SketcherComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule\r\n  ],\r\n  exports: [\r\n    SketcherComponent\r\n  ]\r\n})\r\nexport class SketcherModule { }\r\n","import { Component, OnInit, OnDestroy, Inject } from '@angular/core';\r\nimport { SafeUrl, DomSanitizer } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { DEPLOY_URL } from '../utilities/deploy-url';\r\n\r\n@Component({\r\n  selector: 'adme-method',\r\n  templateUrl: './method.component.html',\r\n  styleUrls: ['./method.component.scss']\r\n})\r\nexport class MethodComponent implements OnInit, OnDestroy {\r\n  dataDownloadHref: SafeUrl;\r\n  model = 'rlm';\r\n  subscription: Subscription;\r\n\r\n  constructor(\r\n    private domSanatizer: DomSanitizer,\r\n    private activatedRoute: ActivatedRoute,\r\n    @Inject(DEPLOY_URL) public deployUrl: string\r\n  ) {\r\n    this.dataDownloadHref = domSanatizer.bypassSecurityTrustResourceUrl(`${deployUrl}assets/rlm_public_set.xlsx`);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = this.activatedRoute.params.subscribe(params => {\r\n      this.model = params['model'];\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"inner-container\" *ngIf=\"model == 'rlm'\">\r\n        <h2>\r\n            RLM Model\r\n        </h2>\r\n        <div class=\"definitions-container\">\r\n            <div class=\"definition\">\r\n                <div class=\"name\">Name:</div>\r\n                <div class=\"value\">Rat Liver Microsomal Stability</div>\r\n            </div>\r\n            <div class=\"definition\">\r\n                <div class=\"name\">Dataset Type:</div>\r\n                <div class=\"value\">Classification</div>\r\n            </div>\r\n            <div class=\"definition\">\r\n                <div class=\"name\">Dataset Size:</div>\r\n                <div class=\"value\">22,016 compounds</div>\r\n            </div>\r\n            <div class=\"definition\">\r\n                <div class=\"name\">Validation:</div>\r\n                <div class=\"value\">5-Fold CV and Time-Split CV</div>\r\n            </div>\r\n            <div class=\"definition\">\r\n                <div class=\"name\">Descriptors:</div>\r\n                <div class=\"value\">Molecular Graphs</div>\r\n            </div>\r\n            <div class=\"definition\">\r\n                <div class=\"name\">Model Details:</div>\r\n                <div class=\"value\">\r\n                    The model is based on a message-passing variant of graph convolutional neural network (GCNN) that directly operates on molecular graphs. The model was built using MIT's <a href=\"https://github.com/chemprop/chemprop\" target=\"_blank\">Chemprop</a>, described in <a href=\"https://pubs.acs.org/doi/abs/10.1021/acs.jcim.9b00237\" target=\"_blank\">this paper</a>. In this case, we retained the default parameters. A variant that considers additional features such as RDKit descriptors will be added in future.</div>\r\n            </div>\r\n            <div class=\"definition\">\r\n                <div class=\"name\">Interpretation of Models:</div>\r\n                <div class=\"value\">\r\n                    The model provides predicted class (1 or 0) for a given compound. If the predicted class is '1', it means the compound is predicted as unstable (t<sub>1/2</sub> &lt;= 30 min) and if the predicted class is '0', the compound is predicted as stable (t<sub>1/2</sub> &gt; 30 min). The model also provides a probability score (between 0 and 1), shown in parentheses next to the predicted class.</div>\r\n            </div>\r\n            <div class=\"definition\">\r\n                <div class=\"name\">Data for Download:</div>\r\n                <div class=\"value\">\r\n                    A subset of the dataset used for developing these models is available for download. Click <a\r\n                        [href]=\"dataDownloadHref\" target=\"_blank\" admeTrackLinkEvent evAction=\"download\" evLabel=\"rlm data subset\">here</a> to download. Alternatively, this data is also\r\n                    available from PubChem Bioassay database: <a\r\n                        href=\"https://pubchem.ncbi.nlm.nih.gov/assay/assay.cgi?aid=1508591\" target=\"_blank\" admeTrackLinkEvent evLabel=\"rlm pubchem\">AID\r\n                        1508591</a>.\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <h3>\r\n            RLM Assay Protocol\r\n        </h3>\r\n        <p style=\"text-align: justify;\">\r\n            Experiments were performed using a Freedom Evo 200 automated platform with a 96-channel (MCA96) head\r\n            with EVOware software (version 3.2) (Tecan Inc., Männedorf, Switzerland). The system also includes an\r\n            Inheco heating block and cooling block (Inheco, Munich, Germany). Six standard controls were tested in\r\n            each run: buspirone, propranolol, diclofenac, loperamide, carbamazepine and antipyrine. The assay\r\n            incubation system consisted of 0.5 mg/mL of rat microsomal protein (Strain: Sprague-Dawley), 1.0 μM drug\r\n            concentration, and NADPH regeneration system (containing 0.650 mM NADP+, 1.65 mM glucose 6-phosphate,\r\n            1.65 mM MgCl2, and 0.2 unit/mL G6PDH) in 100 mM phosphate buffer at pH 7.4. The incubation was carried\r\n            out at 37 °C for 15 min. The reaction was quenched by adding 555 μL of acetonitrile containing 0.28 μM\r\n            albendazole, an internal standard. After a 20-minute centrifugation at 3000 rpm at 4°C, 30 μL of the\r\n            supernatant was transferred to an analysis plate and was diluted five-fold using 1:2 v/v\r\n            acetonitrile/water. Sample quantification and analysis was performed using a previously described method\r\n            (Shah et al., 2016) with minor modifications. The t<sub>1/2</sub> values were capped at 30 minutes since for a\r\n            15-minute assay, the data cannot be extrapolated beyond 30 minutes (Di et al., 2004).\r\n        </p>\r\n        <h3>\r\n            References:\r\n        </h3>\r\n        <ol>\r\n            <li>\r\n                Shah, P. et al. An Automated High-Throughput Metabolic Stability Assay Using an Integrated High\r\n                Resolution Accurate Mass Method and Automated Data Analysis Software. Drug Metab Dispos. 44,\r\n                1653-1661 (2016).\r\n            </li>\r\n            <li>\r\n                Di, L. et al. Experimental design on single-time-point high-throughput microsomal stability assay. J\r\n                Pharm Sci. 93, 1537-1544 (2004).\r\n            </li>\r\n        </ol>\r\n    </div>\r\n    <div class=\"inner-container\" *ngIf=\"model == 'pampa'\">\r\n        <h2>\r\n            PAMPA Model\r\n        </h2>\r\n        <div class=\"definitions-container\">\r\n            <div class=\"definition\">\r\n                <div class=\"name\">Name:</div>\r\n                <div class=\"value\">Parallel artificial membrane permeability assay (PAMPA)</div>\r\n            </div>\r\n            <div class=\"definition\">\r\n                <div class=\"name\">Dataset Type:</div>\r\n                <div class=\"value\">Classification</div>\r\n            </div>\r\n            <div class=\"definition\">\r\n                <div class=\"name\">Dataset Size:</div>\r\n                <div class=\"value\">16,624 compounds</div>\r\n            </div>\r\n            <div class=\"definition\">\r\n                <div class=\"name\">Validation:</div>\r\n                <div class=\"value\">5-Fold CV</div>\r\n            </div>\r\n            <div class=\"definition\">\r\n                <div class=\"name\">Descriptors:</div>\r\n                <div class=\"value\">Molecular Graphs</div>\r\n            </div>\r\n            <div class=\"definition\">\r\n                <div class=\"name\">Model Details:</div>\r\n                <div class=\"value\">\r\n                    The model is based on a message-passing variant of graph convolutional neural network (GCNN) that directly operates on molecular graphs. The model was built using MIT's <a href=\"https://github.com/chemprop/chemprop\" target=\"_blank\">Chemprop</a>, described in this <a href=\"https://pubs.acs.org/doi/abs/10.1021/acs.jcim.9b00237\" target=\"_blank\">this paper</a>. In this case, we retained the default parameters. A variant that considers additional features such as RDKit descriptors will be added in future.\r\n                </div>\r\n            </div>\r\n            <div class=\"definition\">\r\n                <div class=\"name\">Interpretation of Models:</div>\r\n                <div class=\"value\">\r\n                    The model provides predicted class (1 or 0) for a given compound. If the predicted class is '1', it means the compound is predicted to have 'low or moderate permeability' (i.e., log P<sub><i>eff</i></sub> &#60; 2.0) and if the predicted class is '0', the compound is predicted to have 'high permeability' (i.e., log P<sub><i>eff</i></sub> > 2.5). The models also provide a probability score (between 0 and 1), shown in parentheses next to the predicted class.\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <h3>PAMPA Assay Protocol:</h3>\r\n        <p style=\"text-align: justify;\">\r\n            The stirring double-sink PAMPA method patented by pION Inc. (Billerica, MA) was\r\n            employed to determine the permeability of compounds via PAMPA passive diffusion.\r\n            The PAMPA lipid membrane, which consisted of an artificial membrane of a proprietary\r\n            lipid mixture and dodecane (Pion Inc.), was optimized to predict gastrointestinal tract (GIT)\r\n            passive diffusion permeability. This membrane was immobilized on a plastic matrix of a 96\r\n            well “donor” filter plate placed below a 96 well “acceptor” plate. This artificial membrane\r\n            mimicked the GIT membrane in the human body. Both “donor” and “acceptor” wells were\r\n            buffered to pH 7.4. The test articles, stocked in 10 mM DMSO solutions, were diluted to\r\n            0.05 mM in aqueous buffer (pH 7.4) and the concentration of DMSO was 0.5% in the final\r\n            solution. During the 30-minute permeation period at room temperature the test samples in\r\n            the donor compartment were stirred using the Gutbox technology (Pion Inc.) to reduce the\r\n            unstirred water layer. The test article concentrations in the “donor” and “acceptor”\r\n            compartments were measured using a UV plate reader (Nano Quant, Infinite® 200 PRO,\r\n            Tecan Inc., Männedorf, Switzerland). Permeability calculations were performed using Pion\r\n            Inc. software and were expressed in the units of 10<sup>-6</sup>cm/s.\r\n        </p>\r\n    </div>\r\n    <div class=\"inner-container\" *ngIf=\"model == 'solubility'\">\r\n        <h2>\r\n            Solubility Model\r\n        </h2>\r\n        <div class=\"definitions-container\">\r\n            <div class=\"definition\">\r\n                <div class=\"name\">Name:</div>\r\n                <div class=\"value\">Pion’s patented µSOL assay (Solubility)</div>\r\n            </div>\r\n            <div class=\"definition\">\r\n                <div class=\"name\">Dataset Type:</div>\r\n                <div class=\"value\">Classification</div>\r\n            </div>\r\n            <div class=\"definition\">\r\n                <div class=\"name\">Dataset Size:</div>\r\n                <div class=\"value\">22,209 compounds</div>\r\n            </div>\r\n            <div class=\"definition\">\r\n                <div class=\"name\">Validation:</div>\r\n                <div class=\"value\">5-Fold CV</div>\r\n            </div>\r\n            <div class=\"definition\">\r\n                <div class=\"name\">Descriptors:</div>\r\n                <div class=\"value\">Molecular graphs</div>\r\n            </div>\r\n            <div class=\"definition\">\r\n                <div class=\"name\">Model Details:</div>\r\n                <div class=\"value\">\r\n                    The model is based on a message-passing variant of graph convolutional neural network (GCNN) that directly operates on molecular graphs. The model was built using MIT's <a href=\"https://github.com/chemprop/chemprop\" target=\"_blank\">Chemprop</a>, described in this <a href=\"https://pubs.acs.org/doi/abs/10.1021/acs.jcim.9b00237\" target=\"_blank\">this paper</a>. In this case, we retained the default parameters. A variant that considers additional features such as RDKit descriptors will be added in future.\r\n                </div>\r\n            </div>\r\n            <div class=\"definition\">\r\n                <div class=\"name\">Interpretation of Models:</div>\r\n                <div class=\"value\">\r\n                    The model provides predicted class (1 or 0) for a given compound. If the predicted class is '1', it means the compound is predicted to have 'low solubility' (i.e., &#60;10 µg/ml) and if the predicted class is '0', the compound is predicted to have 'high solubility' (i.e., &#62;10 µg/ml). The models also provide a probability score (between 0 and 1), shown in parentheses next to the predicted class.\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <h3>Solubility Assay Protocol:</h3>\r\n        <p style=\"text-align: justify;\">\r\n            Pion’s patented µSOL assay was used for kinetic solubility determination. In this assay, the classical saturation shake-flask solubility method was adapted as previously described by Avdeef et al., 2001. Test compounds were prepared in 10 mM DMSO stock and diluted to a final drug concentration of 150 µM in the aqueous solution (pH 7.4, 100 mM phosphate buffer). Samples were incubated at room temperature for 6 h and vacuum-filtered using Tecan Te-Vac to remove any precipitates. The concentration of the compound in the filtrate was measured via UV absorbance (λ: 250–498 nm). The filtrate drug concentration was determined by comparing the fully solubilized reference plate which contains 17 µM of compound dissolved in spectroscopically pure n-propanol. All compounds were tested in duplicates. The kinetic solubility (µg/mL) of compounds was calculated using the µSOL Evolution software. The three experimental controls used were albendazole (low solubility), phenazopyridine (moderate solubility) and furosemide (high solubility).\r\n        </p>\r\n        <h3>\r\n            References:\r\n        </h3>\r\n        <ol>\r\n            <li>\r\n                A. Avdeef. Absorption And Drug Development. John Wiley & Sons Inc, Hoboken, New Jersey (2001)\r\n            </li>\r\n        </ol>\r\n    </div>\r\n    <div class=\"inner-container\" *ngIf=\"model == 'cyp450'\">\r\n        <h2>\r\n            CYP450 Models\r\n        </h2>\r\n        <h3>\r\n            High-throughput metabolic stability assays:\r\n        </h3>\r\n        <p>\r\n            The substrate depletion assay was employed to determine metabolic stability, using an established mid-density (384-well format) protocol<sup>1</sup>. The workflow included a robotic system for incubation and sample clean-up, coupled with an automated ultra-high performance liquid chromatography-high resolution mass spectrometry (UHPLC-HRMS) method for sample analysis. Briefly, each 110 µL reaction mixture consisted of 1 µM test article, supersomes, and an NADPH regenerating system in 100mM phosphate buffer at pH 7.4. The specific protein and enzyme concentrations, as well as the control compounds utilized are listed in Table 1. Incubations were conducted at 37°C, with mixing, and reaction aliquots were quenched at 0, 5, 10, 15, 30, and 60 min by addition of cold acetonitrile (ACN) with internal standard (IS), i.e. albendazole. Centrifugation at 3000 g, 4 °C for 20 min, was used to clear samples of precipitated protein and debris. Sample analysis in an UHPLC-HRMS instrument, data extraction, and half-life (t<sub>1/2</sub>) determinations were performed as previously described<sup>1</sup>.\r\n        </p>\r\n        <div class=\"table-container\">\r\n            <div class=\"table-description\">\r\n                Table 1: Summary of enzyme concentrations, cofactor activities and controls used the P450-Glo assays\r\n            </div>\r\n            <div class=\"table-responsive-container\">\r\n                <table class=\"mat-table\">\r\n                    <thead>\r\n                        <tr class=\"mat-header-row\">\r\n                            <th class=\"mat-header-cell \">\r\n                                Matrix\r\n                            </th>\r\n                            <th class=\"mat-header-cell \">\r\n                                Final Protein Concentration [mg/mL]\r\n                            </th>\r\n                            <th class=\"mat-header-cell \">\r\n                                Total CYP content [nM]\r\n                            </th>\r\n                            <th class=\"mat-header-cell \">\r\n                                Cytochrome c Reductase activity [nol/(min x mg protein)]\r\n                            </th>\r\n                            <th class=\"mat-header-cell \">\r\n                                Cytochrome b<sub>5</sub> content [pmol/mg protein]\r\n                            </th>\r\n                            <th class=\"mat-header-cell \">\r\n                                High clearance controls\r\n                            </th>\r\n                            <th class=\"mat-header-cell \">\r\n                                Moderate clearance controls\r\n                            </th>\r\n                            <th class=\"mat-header-cell \">\r\n                                Low clearance controls\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr class=\"mat-row\">\r\n                            <td class=\"mat-cell strong\">\r\n                                CYP3A4\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                ~0.2\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                30\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                2900\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                1090\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                Buspirone, Loperamide\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                Ketoconazole\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                Antipyrine, Carbamazepine\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"mat-row\">\r\n                            <td class=\"mat-cell strong\">\r\n                                CYP2C9\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                ~0.12\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                45\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                985\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                710\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                Glyburide, Glimepiride\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                Tamoxifen\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                Antipyrine, Meloxicam\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"mat-row\">\r\n                            <td class=\"mat-cell strong\">\r\n                                CYP2D6\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                ~0.38\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                60\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                3000\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                -\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                Bufuralol, Desipramine, Amitriptyline\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                Mexiletine\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                Codeine\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <h3>\r\n            P450-Glo qHTS:\r\n        </h3>\r\n        <p>\r\n            The P450-Glo inhibition assay is a luminescent technique used to detect CYP activity, through the liberation of luciferin from CYP probe substrates. P450-Glo assays were performed using a previously described method with minor modifications<sup>2</sup>. Briefly, 2 µL of CYP-substrate mix was dispensed into medium-binding white/solid 1,536-well plates using a Flying Reagent Dispenser (FRD, Aurora Discovery, Carlsbad, CA) with the exception of adding Bovine Serum Albumin (BSA) to the mixture for CYP2C9 and CYP2C19. The initial optimization assays for CYP2C9 and CYP2C19 yielded lower signal to background ratios and higher well to well variation. To increase signal and prevent adhesion of protein to tubes of the plate dispenser, 0.4% BSA was added to these two enzyme assays. 23 nL of each positive control (columns 1-4) and test compound (columns 5-48) dissolved in DMSO was transferred to the assay plates using a Wako Pintool station (Wako Automation, San Diego, CA). Positive controls used in these experiments are listed in Table 2. After the control/test compounds were transferred, the assay plates were incubated at room temperature (RT) for 10 min before the addition of 2 µL NADPH regeneration solution using an FRD. The reaction incubation continued at either RT or 37 °C for 60 min, and then quenched by FRD addition of 4 µL of the detection reagent. After a 20 min incubation at room temperature, the luminescence intensity was measured and quantified using a ViewLux plate reader (PerkinElmer, Shelton, CT). Data was expressed as relative luminescence units. \r\n        </p>\r\n        <div class=\"table-container\">\r\n            <div class=\"table-description\">\r\n                Table 2: Summary of incubation conditions and positive controls used in the P450-Glo assays\r\n            </div>\r\n            <div class=\"table-responsive-container\">\r\n                <table class=\"mat-table\">\r\n                    <thead>\r\n                        <tr class=\"mat-header-row\">\r\n                            <th class=\"mat-header-cell \">\r\n                                Enzyme\r\n                            </th>\r\n                            <th class=\"mat-header-cell \">\r\n                                Inhibitor\r\n                            </th>\r\n                            <th class=\"mat-header-cell \">\r\n                                Dilution Format\r\n                            </th>\r\n                            <th class=\"mat-header-cell \">\r\n                                Inhibitor Concentration\r\n                            </th>\r\n                            <th class=\"mat-header-cell \">\r\n                                Incubation conditions\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr class=\"mat-row\">\r\n                            <td class=\"mat-cell strong\">\r\n                                CYP3A4\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                Ketoconazole\r\n                            </td>\r\n                            <td class=\"mat-cell center\" rowspan=\"3\">\r\n                                <div>16 concentrations/</div>\r\n                                <div>2-fold dilution in</div>\r\n                                <div>duplicates</div>\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                57 µM-1.8 nM\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                1 h/RT\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"mat-row\">\r\n                            <td class=\"mat-cell strong\">\r\n                                CYP2C9\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                Sulfaphenazole\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                57 µM-1.8 nM\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                1 h/ 37˚C/ 0.4% BSA\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"mat-row\">\r\n                            <td class=\"mat-cell strong\">\r\n                                CYP2D6\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                Quinidine\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                1.4 µM-0.04 nM\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                1 h/RT\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <div class=\"table-container\">\r\n            <div class=\"table-description\">\r\n                Parsing of Substrates and Inhibitors:\r\n            </div>\r\n            <div class=\"table-responsive-container\">\r\n                <table class=\"mat-table more-padding\">\r\n                    <thead>\r\n                        <tr class=\"mat-header-row\">\r\n                            <th class=\"mat-header-cell \">\r\n                                Category\r\n                            </th>\r\n                            <th class=\"mat-header-cell \">\r\n                                <div>Clearance</div>\r\n                                <div>/</div>\r\n                                <div>P450-Glo</div>\r\n                            </th>\r\n                            <th class=\"mat-header-cell \">\r\n                                Classification\r\n                            </th>\r\n                            <th class=\"mat-header-cell \">\r\n                                Parsing Rationale\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr class=\"mat-row\">\r\n                            <td class=\"mat-cell center\">\r\n                                1\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                + / +\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                Substrate\r\n                            </td>\r\n                            <td class=\"mat-cell\">\r\n                                Exhibiting activity in both assays, the compound is a clear ligand for the enzyme(s). It is unclear whether the parent, product, or both are responsible for the inhibition.\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"mat-row\">\r\n                            <td class=\"mat-cell center\">\r\n                                2\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                - / +\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                Inhibitor\r\n                            </td>\r\n                            <td class=\"mat-cell\">\r\n                                The compound is able to inhibit the enzyme metabolism of a probe substrate, but is not itself cleared, indicating that the parent serves as the inhibitor.\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"mat-row\">\r\n                            <td class=\"mat-cell center\">\r\n                                3\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                - / -\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                Non-ligand\r\n                            </td>\r\n                            <td class=\"mat-cell\">\r\n                                The lack of activity in either assay signifies that the compound does not associate with the enzyme(s) with sufficient affinity to enable catalysis or inhibition thereof.\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"mat-row\">\r\n                            <td class=\"mat-cell center\">\r\n                                4\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                + / -\r\n                            </td>\r\n                            <td class=\"mat-cell center\">\r\n                                Substrate\r\n                            </td>\r\n                            <td class=\"mat-cell\">\r\n                                Although a clear substrate, the binding kinetics of the parent compound and its metabolites do not preclude the concomitant metabolism of the P450-Glo probe.\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <h3>\r\n            References:\r\n        </h3>\r\n        <ol>\r\n            <li>\r\n                Shah, P. et al. An Automated High-Throughput Metabolic Stability Assay Using an Integrated High-Resolution Accurate Mass Method and Automated Data Analysis Software. Drug metabolism and disposition: the biological fate of chemicals 44, 1653-1661 (2016).\r\n            </li>\r\n            <li>\r\n                Veith, H. et al. Comprehensive characterization of cytochrome P450 isozyme selectivity across chemical libraries. Nat Biotechnol 27, 1050-1055 (2009).\r\n            </li>\r\n        </ol>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { PredictionsData, PredictionsColumnsDict, DownloadEvent } from './predictions.model';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { Sort } from '@angular/material/sort';\r\nimport { StructureImageDialogComponent } from '../structure-image-dialog/structure-image-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { GoogleAnalyticsService } from '../google-analytics/google-analytics.service';\r\n\r\n@Component({\r\n  selector: 'adme-predictions-table',\r\n  templateUrl: './predictions-table.component.html',\r\n  styleUrls: ['./predictions-table.component.scss']\r\n})\r\nexport class PredictionsTableComponent implements OnInit {\r\n  data: Array<any> = [];\r\n  paged: Array<any>;\r\n  displayData: Array<any> = [];\r\n  page = 0;\r\n  pageSize = 10;\r\n  private predictions: PredictionsData;\r\n  displayedColumnsDict: { [columnName: string]: PredictionsColumnsDict };\r\n  displayedColumns: Array<string>;\r\n  private allColumns: Array<string>;\r\n  @Input() dataHandling: 'replace'|'concat' = 'replace';\r\n  errorMessage: string;\r\n  errorMessages: Array<string> = [];\r\n  @Output() download: EventEmitter<DownloadEvent> = new EventEmitter<DownloadEvent>();\r\n  @Input() model: string;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private gaService: GoogleAnalyticsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  @Input('predictions-data')\r\n  set predictionsData(predictions: PredictionsData) {\r\n    if (predictions != null) {\r\n      this.predictions = predictions;\r\n      this.displayedColumnsDict = predictions.mainColumnsDict;\r\n      this.displayedColumns = Object.keys(this.displayedColumnsDict).sort((a, b) => {\r\n        return this.displayedColumnsDict[a].order - this.displayedColumnsDict[b].order;\r\n      });\r\n      this.allColumns = predictions.columns;\r\n      if (this.dataHandling === 'replace') {\r\n        this.data = predictions.data;\r\n        this.displayData = this.getNonEmptyPredictions(this.data);\r\n      } else {\r\n        const predition = predictions.data[0];\r\n        this.data.push(predition);\r\n        this.displayData = this.displayData.concat(this.getNonEmptyPredictions(predictions.data));\r\n      }\r\n      this.pageChange();\r\n      if (predictions.hasErrors) {\r\n        this.errorMessage = 'The system encountered the following error(s) while processing your request:';\r\n        this.errorMessages = predictions.errorMessages;\r\n      }\r\n    } else {\r\n      this.data = null;\r\n      this.displayData = null;\r\n    }\r\n  }\r\n\r\n  pageChange(pageEvent?: PageEvent): void {\r\n    this.clearErrorMessage();\r\n    if (pageEvent != null) {\r\n      if (pageEvent.pageIndex !== this.page) {\r\n        this.gaService.sendEvent('click:button', 'page-change', `predictions:${this.model}`);\r\n      }\r\n      this.page = pageEvent.pageIndex;\r\n      if (pageEvent.pageSize !== this.pageSize) {\r\n        this.gaService.sendEvent('click:select', 'page-size-change', `predictions:${this.model}`);\r\n      }\r\n      this.pageSize = pageEvent.pageSize;\r\n    } else {\r\n      this.page = 0;\r\n    }\r\n    this.paged = [];\r\n    const startIndex = this.page * this.pageSize;\r\n    for (let i = startIndex; i < (startIndex + this.pageSize); i++) {\r\n      if (this.displayData[i] != null) {\r\n        this.paged.push(this.displayData[i]);\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n\r\n    if (!sort.active || sort.direction === '') {\r\n      return;\r\n    }\r\n\r\n    const data = this.displayData.slice();\r\n\r\n    this.displayData = data.sort((a, b) => {\r\n      const isAsc = sort.direction === 'asc';\r\n      return this.compare(a[sort.active], b[sort.active], isAsc);\r\n    });\r\n\r\n    this.pageChange();\r\n  }\r\n\r\n  compare(a: number | string, b: number | string, isAsc: boolean) {\r\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n  }\r\n\r\n  clearErrorMessage(): void {\r\n    this.errorMessage = '';\r\n    this.errorMessages = [];\r\n  }\r\n\r\n  getNonEmptyPredictions(data: Array<any>): Array<any> {\r\n    const predictionColumns = Object.keys(this.displayedColumnsDict).filter(key => !this.displayedColumnsDict[key].isSmilesColumn);\r\n    return data.filter(item => {\r\n      let emptyColumns = 0;\r\n      predictionColumns.forEach(column => {\r\n        if (item[column] == null || item[column] === '') {\r\n          emptyColumns++;\r\n        }\r\n      });\r\n      return emptyColumns < predictionColumns.length;\r\n    });\r\n  }\r\n\r\n  downloadCSV(): void {\r\n    this.gaService.sendEvent('click:button', 'download', `predictions:${this.model}`);\r\n    this.download.emit({\r\n      data: this.data,\r\n      allColumns: this.allColumns\r\n    });\r\n  }\r\n\r\n  openStructureImageDialog(smi: string): void {\r\n    this.dialog.open(StructureImageDialogComponent, {\r\n      data: {\r\n        smiles: smi\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"error-message-container\" *ngIf=\"errorMessage\">\r\n    <div class=\"error-message\">\r\n        <div>\r\n            {{errorMessage}}\r\n        </div>\r\n        <ul *ngIf=\"errorMessages && errorMessages.length\">\r\n            <li *ngFor=\"let message of errorMessages\">{{message}}</li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"error-message-actions\">\r\n        <button mat-button color=\"primary\" (click)=\"clearErrorMessage()\">\r\n            <mat-icon aria-hidden=\"false\" aria-label=\"Close error message\" svgIcon=\"cancel\"></mat-icon>\r\n        </button>\r\n    </div>\r\n</div>\r\n<div class=\"models-output\" *ngIf=\"paged && paged.length\">\r\n    <h2>Model predictions</h2>\r\n    <div class=\"top-actions-container\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"downloadCSV()\">Download</button>\r\n        <div class=\"fill-middle\"></div>\r\n        <mat-paginator [length]=\"displayData && displayData.length || 0\" [pageSize]=\"pageSize\" [pageIndex]=\"page\"\r\n            showFirstLastButtons=\"true\" (page)=\"pageChange($event)\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n        </mat-paginator>\r\n    </div>\r\n    <div class=\"table-container\">\r\n        <mat-table #table [dataSource]=\"paged\" matSort (matSortChange)=\"sortData($event)\">\r\n            <ng-container [matColumnDef]=\"displayedColumn\"\r\n                *ngFor=\"let displayedColumn of displayedColumns; index as index\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    <span [matTooltip]=\"displayedColumnsDict[displayedColumn].description\">\r\n                        {{displayedColumnsDict[displayedColumn].isSmilesColumn ? 'mol' : displayedColumn}}\r\n                    </span>\r\n                </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let row\">\r\n                    <span\r\n                        *ngIf=\"!displayedColumnsDict[displayedColumn].isSmilesColumn\">{{row[displayedColumn] == '0 (0.0)' ? '0 (0.01)' : row[displayedColumn]}}</span>\r\n                    <a *ngIf=\"displayedColumnsDict[displayedColumn].isSmilesColumn\"\r\n                        (click)=\"openStructureImageDialog(row[displayedColumn])\" [matTooltip]=\"row[displayedColumn]\">\r\n                        <img class=\"table-structure\" admeStructureImage [entityId]=\"row[displayedColumn]\" />\r\n                    </a>\r\n                </mat-cell>\r\n            </ng-container>\r\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns;\" fxLayoutAlign=\"center start\"></mat-row>\r\n        </mat-table>\r\n    </div>\r\n    <mat-paginator [length]=\"displayData && displayData.length || 0\" [pageSize]=\"pageSize\" [pageIndex]=\"page\"\r\n        showFirstLastButtons=\"true\" (page)=\"pageChange($event)\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n    </mat-paginator>\r\n</div>","import { Directive, OnInit, OnDestroy, ElementRef, Output, Input, EventEmitter } from '@angular/core';\r\nimport { HTMLInputEvent } from './html-input-event.model';\r\n\r\n@Directive({\r\n  selector: '[admeFileSelect]'\r\n})\r\nexport class FileSelectDirective implements OnInit, OnDestroy {\r\n  @Input() accept: string;\r\n  @Output() selectedFile: EventEmitter<File> = new EventEmitter();\r\n  private fileInputElement: HTMLInputElement;\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    this.addHiddenFileInput();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    document.body.removeChild(this.fileInputElement);\r\n  }\r\n\r\n  addHiddenFileInput() {\r\n    this.fileInputElement = document.createElement('INPUT') as HTMLInputElement;\r\n    this.fileInputElement.setAttribute('type', 'file');\r\n    this.fileInputElement.style.width = '0';\r\n    this.fileInputElement.style.height = '0';\r\n    this.fileInputElement.style.overflow = 'hidden';\r\n\r\n    if (this.accept) {\r\n      this.fileInputElement.setAttribute('accept', this.accept);\r\n    }\r\n\r\n    this.fileInputElement.onchange = (event: HTMLInputEvent) => {\r\n      if (event.target.files && event.target.files.length > 0) {\r\n        this.selectedFile.emit(event.target.files[event.target.files.length - 1]);\r\n      }\r\n      event.preventDefault();\r\n    };\r\n\r\n    document.body.appendChild(this.fileInputElement);\r\n\r\n    const fileInputElement = this.fileInputElement;\r\n    const clickFileInputElement = () => {\r\n      fileInputElement.click();\r\n    };\r\n\r\n    this.el.nativeElement.addEventListener('click', clickFileInputElement);\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, Inject } from '@angular/core';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ResolveEnd, Router, RouterEvent } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { GoogleAnalyticsService } from './google-analytics/google-analytics.service';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { DEPLOY_URL } from './utilities/deploy-url';\r\n\r\n@Component({\r\n  selector: 'adme-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  private routerSubscription: Subscription;\r\n  constructor(\r\n    iconRegistry: MatIconRegistry,\r\n    sanitizer: DomSanitizer,\r\n    private router: Router,\r\n    private gaService: GoogleAnalyticsService,\r\n    // tslint:disable-next-line:variable-name\r\n    @Inject(DOCUMENT) private _document: HTMLDocument,\r\n    @Inject(DEPLOY_URL) private deployUrl: string\r\n  ) {\r\n    iconRegistry.addSvgIcon(\r\n      'cancel',\r\n      sanitizer.bypassSecurityTrustResourceUrl(`${deployUrl}assets/icons/cancel-24px.svg`));\r\n  }\r\n  ngOnInit() {\r\n    this._document.getElementById('appFavicon').setAttribute('href', `${this.deployUrl}assets/icons/favicon.ico`);\r\n    this.routerSubscription = this.router.events.subscribe((event: RouterEvent) => {\r\n      if (event instanceof ResolveEnd) {\r\n        this.gaService.sendPageView(event.state.root.firstChild.data.pageTitle, event.state.url);\r\n      }\r\n    });\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.routerSubscription != null) {\r\n      this.routerSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","<adme-loading></adme-loading>\r\n<mat-toolbar color=\"primary\">\r\n  <a class=\"title\" routerLink=\"/home\">ADME @ NCATS</a>\r\n  <div class=\"navigation\">\r\n    <a class=\"nav-item\" routerLink=\"/predictions\">Predict</a>\r\n    <a class=\"nav-item\" [matMenuTriggerFor]=\"navMenu\" >Models</a>\r\n    <mat-menu #navMenu=\"matMenu\">\r\n      <button mat-menu-item routerLink=\"/models/rlm\">RLM</button>\r\n      <button mat-menu-item routerLink=\"/models/pampa\">PAMPA</button>\r\n      <button mat-menu-item routerLink=\"/models/solubility\">Solubility</button>\r\n      <button mat-menu-item routerLink=\"/models/cyp450\">CYP450</button>\r\n    </mat-menu>\r\n    <a class=\"nav-item\" routerLink=\"/contact\">Contact</a>\r\n  </div>\r\n  <span class=\"fill-middle\"></span>\r\n</mat-toolbar>\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\nimport { Ketcher } from '../sketcher/ketcher.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FileForm } from '../text-file/file-form.model';\r\nimport { LoadingService } from '../loading/loading.service';\r\nimport { DownloadEvent, PredictionsData } from '../predictions-table/predictions.model';\r\nimport { GoogleAnalyticsService } from '../google-analytics/google-analytics.service';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { ConfigService } from '../config/config.service';\r\n\r\n@Component({\r\n  selector: 'adme-predictions',\r\n  templateUrl: './predictions.component.html',\r\n  styleUrls: ['./predictions.component.scss']\r\n})\r\nexport class PredictionsComponent implements OnInit {\r\n  private ketcher: Ketcher;\r\n  private sketcherDisplayedColumns = ['smiles', 'rlm'];\r\n  sketcherData: { [modelName: string]: PredictionsData };\r\n  fileData: { [modelName: string]: PredictionsData };\r\n  private apiBaseUrl: string;\r\n\r\n  errorMessage: string;\r\n  errorMessages: Array<string> = [];\r\n  file: Blob;\r\n  link: HTMLAnchorElement;\r\n  columnSeparator = ',';\r\n  lineBreak = '\\n';\r\n  private sketcherIndexIdentifierColumn = 0;\r\n  private fileIndexIdentifierColumn: number;\r\n  indexIdentifierColumn: number;\r\n  models = ['RLM', 'PAMPA', 'Solubility', 'CYP450'];\r\n  tabLabels = {\r\n    RLM: 'RLM Stability',\r\n    PAMPA: 'PAMPA Permeability',\r\n    Solubility: 'Solubility',\r\n    CYP450: 'CYP450'\r\n  };\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private loadingService: LoadingService,\r\n    private gaService: GoogleAnalyticsService,\r\n    private configService: ConfigService\r\n  ) {\r\n    this.apiBaseUrl = configService.configData.apiBaseUrl;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.link = document.createElement('a');\r\n  }\r\n\r\n  processSketcherInput(smiles: string): void {\r\n    this.gaService.sendEvent('click:button', 'predict', 'sketcher');\r\n    this.clearErrorMessage();\r\n    this.loadingService.setLoadingState(true);\r\n    this.indexIdentifierColumn = this.sketcherIndexIdentifierColumn;\r\n    const options = {\r\n      params: {\r\n        smiles,\r\n        model: this.models\r\n      }\r\n    };\r\n    this.http.get(`${this.apiBaseUrl}api/v1/predict`, options).subscribe((response: any) => {\r\n      this.sketcherData = response;\r\n      this.loadingService.setLoadingState(false);\r\n    }, error => {\r\n      this.errorMessage = 'There was an error processing your structure. Please modify it and try again.';\r\n      this.loadingService.setLoadingState(false);\r\n    });\r\n  }\r\n\r\n  processFile(fileForm: FileForm): void {\r\n    this.gaService.sendEvent('click:button', 'predict', 'file');\r\n    this.clearErrorMessage();\r\n    this.loadingService.setLoadingState(true);\r\n    const formData = new FormData();\r\n    formData.append('lineBreak', fileForm.lineBreak);\r\n    this.lineBreak = fileForm.lineBreak;\r\n    formData.append('columnSeparator', fileForm.columnSeparator);\r\n    this.columnSeparator = fileForm.columnSeparator;\r\n    formData.append('hasHeaderRow', fileForm.hasHeaderRow.toString());\r\n    formData.append('indexIdentifierColumn', fileForm.indexIdentifierColumn.toString());\r\n    formData.append('models', this.models.join(';'));\r\n    this.fileIndexIdentifierColumn = fileForm.indexIdentifierColumn;\r\n    this.indexIdentifierColumn = this.fileIndexIdentifierColumn;\r\n    formData.append('file', fileForm.file);\r\n    this.http.post(`${this.apiBaseUrl}api/v1/predict-file`, formData).subscribe((response: any) => {\r\n      if (response.hasErrors) {\r\n        this.errorMessage = response.errorMessages;\r\n      } else if (response && Object.keys(response).length > 0) {\r\n        this.fileData = response;\r\n      }\r\n      this.loadingService.setLoadingState(false);\r\n    }, error => {\r\n      this.fileData = null;\r\n      this.errorMessage = 'There was an error processing your file. Please make sure you have selected a file that contains SMILES, indicate if the file contains a header and the column number containing the SMILES.';\r\n      this.loadingService.setLoadingState(false);\r\n    });\r\n  }\r\n\r\n  clearErrorMessage(): void {\r\n    this.errorMessage = '';\r\n    this.errorMessages = [];\r\n  }\r\n\r\n  downloadCSV(event: DownloadEvent): void {\r\n    const dataKeys = [...event.allColumns].join(this.columnSeparator);\r\n    const lines = [];\r\n    event.data.forEach(data => lines.push(event.allColumns.map(key => data[key]).join(this.columnSeparator)));\r\n    const csv = dataKeys + this.lineBreak + lines.join(this.lineBreak);\r\n    this.file = new Blob([csv], { type: 'text/csv'});\r\n    this.link.download = 'ADMEModelsPredictions.csv';\r\n    this.downloadFile();\r\n  }\r\n\r\n  downloadFile(): void {\r\n    // let url = window.URL.createObjectURL(this.file);\r\n    this.link.href = window.URL.createObjectURL(this.file);\r\n    this.link.click();\r\n    // window.open(url);\r\n  }\r\n\r\n  selectedTabChange(event: MatTabChangeEvent, category?: string): void {\r\n    this.gaService.sendEvent('click:tab', category, event.tab.textLabel);\r\n  }\r\n}\r\n","<div class=\"content-container\">\r\n  <div class=\"molecule-input\">\r\n    <mat-tab-group (selectedTabChange)=\"selectedTabChange($event, 'predictions:input-type')\">\r\n      <mat-tab label=\"Sketcher\">\r\n        <div class=\"tab-body\">\r\n          <adme-sketcher (moleculeInput)=\"processSketcherInput($event)\"></adme-sketcher>\r\n        </div>\r\n        <div class=\"error-message-container\" *ngIf=\"errorMessage\">\r\n          <div class=\"error-message\">\r\n            <div>\r\n              {{errorMessage}}\r\n            </div>\r\n            <ul *ngIf=\"errorMessages && errorMessages.length\">\r\n              <li *ngFor=\"let message of errorMessages\">{{message}}</li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"error-message-actions\">\r\n            <button mat-button color=\"primary\" (click)=\"clearErrorMessage()\">\r\n              <mat-icon aria-hidden=\"false\" aria-label=\"Close error message\" svgIcon=\"cancel\"></mat-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"sketcherData\">\r\n          <mat-tab-group (selectedTabChange)=\"selectedTabChange($event, 'predictions:model')\">\r\n            <mat-tab *ngFor=\"let model of models\" [label]=\"tabLabels[model]\">\r\n              <div>\r\n                <adme-predictions-table dataHandling=\"concat\" [predictions-data]=\"sketcherData[model]\" (download)=\"downloadCSV($event)\" [model]=\"model\"></adme-predictions-table>\r\n              </div>\r\n            </mat-tab>\r\n          </mat-tab-group>\r\n        </div>\r\n      </mat-tab>\r\n      <mat-tab label=\"Text File\">\r\n        <div class=\"tab-body\">\r\n          <adme-text-file (fileProcess)=\"processFile($event)\">\r\n          </adme-text-file>\r\n        </div>\r\n        <div class=\"error-message-container\" *ngIf=\"errorMessage\">\r\n          <div class=\"error-message\">\r\n            <div>\r\n              {{errorMessage}}\r\n            </div>\r\n            <ul *ngIf=\"errorMessages && errorMessages.length\">\r\n              <li *ngFor=\"let message of errorMessages\">{{message}}</li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"error-message-actions\">\r\n            <button mat-button color=\"primary\" (click)=\"clearErrorMessage()\">\r\n              <mat-icon aria-hidden=\"false\" aria-label=\"Close error message\" svgIcon=\"cancel\"></mat-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"fileData\">\r\n          <mat-tab-group (selectedTabChange)=\"selectedTabChange($event, 'predictions:model')\">\r\n            <mat-tab *ngFor=\"let model of models\" [label]=\"tabLabels[model]\">\r\n              <div>\r\n                <adme-predictions-table dataHandling=\"replace\" [predictions-data]=\"fileData[model]\" (download)=\"downloadCSV($event)\" [model]=\"model\"></adme-predictions-table>\r\n              </div>\r\n            </mat-tab>\r\n          </mat-tab-group>\r\n        </div>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n  <!-- <div class=\"models-output\" *ngIf=\"paged && paged.length\">\r\n    <h2>Model predictions</h2>\r\n    <div class=\"top-actions-container\">\r\n      <button mat-raised-button color=\"primary\" (click)=\"downloadCSV()\">Download</button>\r\n      <div class=\"fill-middle\"></div>\r\n      <mat-paginator [length]=\"displayData && displayData.length || 0\" [pageSize]=\"pageSize\" [pageIndex]=\"page\"\r\n        showFirstLastButtons=\"true\" (page)=\"pageChange($event)\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n      </mat-paginator>\r\n    </div>\r\n    <div class=\"table-container\">\r\n      <mat-table #table [dataSource]=\"paged\" matSort (matSortChange)=\"sortData($event)\">\r\n        <ng-container [matColumnDef]=\"displayedColumn\" *ngFor=\"let displayedColumn of displayedColumns; index as index\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header>\r\n            <span [matTooltip]=\"displayedColumnsDict[displayedColumn].description\">\r\n              {{displayedColumnsDict[displayedColumn].isSmilesColumn ? 'mol' : displayedColumn}}\r\n            </span>\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\">\r\n            <span *ngIf=\"!displayedColumnsDict[displayedColumn].isSmilesColumn\">{{row[displayedColumn] == '0 (0.0)' ? '0 (0.01)' : row[displayedColumn]}}</span>\r\n            <a *ngIf=\"displayedColumnsDict[displayedColumn].isSmilesColumn\"\r\n              (click)=\"openStructureImageDialog(row[displayedColumn])\" [matTooltip]=\"row[displayedColumn]\">\r\n              <img class=\"table-structure\" admeStructureImage [entityId]=\"row[displayedColumn]\" />\r\n            </a>\r\n          </mat-cell>\r\n        </ng-container>\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\" fxLayoutAlign=\"center start\"></mat-row>\r\n      </mat-table>\r\n    </div>\r\n    <mat-paginator [length]=\"displayData && displayData.length || 0\" [pageSize]=\"pageSize\" [pageIndex]=\"page\"\r\n      showFirstLastButtons=\"true\" (page)=\"pageChange($event)\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n    </mat-paginator>\r\n  </div> -->\r\n</div>","import { ConfigService } from './config.service';\r\n\r\n// tslint:disable-next-line:ban-types\r\nexport function configServiceFactory(startupService: ConfigService): Function {\r\n    return () => startupService.load();\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SketcherModule } from './sketcher/sketcher.module';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { PredictionsComponent } from './predictions/predictions.component';\r\nimport { MethodComponent } from './method/method.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { FileSelectDirective } from './utilities/file-select.directive';\r\nimport { TextFileComponent } from './text-file/text-file.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { LoadingComponent } from './loading/loading.component';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { StructureImageDirective } from './structure-image/structure-image.directive';\r\nimport { StructureImageDialogComponent } from './structure-image-dialog/structure-image-dialog.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { PredictionsTableComponent } from './predictions-table/predictions-table.component';\r\nimport { ConfigService } from './config/config.service';\r\nimport { configServiceFactory } from './config/config.factory';\r\nimport { TrackLinkEventDirective } from './google-analytics/track-link-event/track-link-event.directive';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { APP_BASE_HREF, PlatformLocation } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    PredictionsComponent,\r\n    MethodComponent,\r\n    PageNotFoundComponent,\r\n    FileSelectDirective,\r\n    TextFileComponent,\r\n    LoadingComponent,\r\n    StructureImageDirective,\r\n    StructureImageDialogComponent,\r\n    ContactComponent,\r\n    PredictionsTableComponent,\r\n    TrackLinkEventDirective\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    SketcherModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatTabsModule,\r\n    MatInputModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatListModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatMenuModule\r\n  ],\r\n  entryComponents: [\r\n    StructureImageDialogComponent\r\n  ],\r\n  providers: [\r\n    ConfigService,\r\n    {\r\n        provide: APP_INITIALIZER,\r\n        useFactory: configServiceFactory,\r\n        deps: [ConfigService],\r\n        multi: true\r\n    },\r\n    {\r\n      provide: APP_BASE_HREF,\r\n      useFactory: (s: PlatformLocation) => s.getBaseHrefFromDOM(),\r\n      deps: [PlatformLocation]\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { DEPLOY_URL } from '../utilities/deploy-url';\r\n\r\n@Component({\r\n  selector: 'adme-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.scss']\r\n})\r\nexport class ContactComponent implements OnInit {\r\n  vishalImgSrc: SafeResourceUrl;\r\n  pranavImgSrc: SafeResourceUrl;\r\n  jorgeImgSrc: SafeResourceUrl;\r\n  jordanImgSrc: SafeResourceUrl;\r\n  noelImgSrc: SafeResourceUrl;\r\n  trungImgSrc: SafeResourceUrl;\r\n  xinImgSrc: SafeResourceUrl;\r\n  rdkitImgSrc: SafeResourceUrl;\r\n  pythonImgSrc: SafeResourceUrl;\r\n  angularImgSrc: SafeResourceUrl;\r\n  epamImgSrc: SafeResourceUrl;\r\n\r\n  constructor(\r\n    private domSanatizer: DomSanitizer,\r\n    @Inject(DEPLOY_URL) public deployUrl: string\r\n  ) {\r\n    this.vishalImgSrc = domSanatizer.bypassSecurityTrustResourceUrl(`${this.deployUrl}assets/profile_images/siramshettyv2.jpg`);\r\n    this.pranavImgSrc = domSanatizer.bypassSecurityTrustResourceUrl(`${this.deployUrl}assets/profile_images/shahpa2.png`);\r\n    this.jorgeImgSrc = domSanatizer.bypassSecurityTrustResourceUrl(`${this.deployUrl}assets/profile_images/neyraj2.jpg`);\r\n    this.jordanImgSrc = domSanatizer.bypassSecurityTrustResourceUrl(`${this.deployUrl}assets/profile_images/williamsjos.jpg`);\r\n    this.noelImgSrc = domSanatizer.bypassSecurityTrustResourceUrl(`${this.deployUrl}assets/profile_images/southalln.jpg`);\r\n    this.trungImgSrc = domSanatizer.bypassSecurityTrustResourceUrl(`${this.deployUrl}assets/profile_images/nguyenda.png`);\r\n    this.xinImgSrc = domSanatizer.bypassSecurityTrustResourceUrl(`${this.deployUrl}assets/profile_images/xux7.jpg`);\r\n\r\n    this.rdkitImgSrc = domSanatizer.bypassSecurityTrustResourceUrl(`${this.deployUrl}assets/images/rdkit.png`);\r\n    this.pythonImgSrc = domSanatizer.bypassSecurityTrustResourceUrl(`${this.deployUrl}assets/images/python.png`);\r\n    this.angularImgSrc = domSanatizer.bypassSecurityTrustResourceUrl(`${this.deployUrl}assets/images/angular.png`);\r\n    this.epamImgSrc = domSanatizer.bypassSecurityTrustResourceUrl(`${this.deployUrl}assets/images/epam_ketcher.png`);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"inner-container\">\r\n        <h1>\r\n            Contact\r\n        </h1>\r\n        <div class=\"profiles-row\">\r\n            <div class=\"profile-image-container\">\r\n                <img [src]=\"vishalImgSrc\">\r\n            </div>\r\n            <div class=\"profile-info-container\">\r\n                <div>\r\n                    Vishal Siramshetty\r\n                </div>\r\n                <div>\r\n                    Postdoctoral Fellow (Informatics)\r\n                </div>\r\n                <div>\r\n                    Email: <a href=\"mailto: siramshettyv2@nih.gov\">siramshettyv2@nih.gov</a> (models/predictions related queries)\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"profiles-row\">\r\n            <div class=\"profile-image-container\">\r\n                <img [src]=\"pranavImgSrc\">\r\n            </div>\r\n            <div class=\"profile-info-container\">\r\n                <div>\r\n                    Pranav Shah\r\n                </div>\r\n                <div>\r\n                    Lead (In Vitro ADME)\r\n                </div>\r\n                <div>\r\n                    Email: <a href=\"mailto: pranav.shah@nih.gov\">pranav.shah@nih.gov</a> (assay/data related queries)\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"profiles-row\">\r\n            <div class=\"profile-image-container\">\r\n                <img [src]=\"jorgeImgSrc\">\r\n            </div>\r\n            <div class=\"profile-info-container\">\r\n                <div>\r\n                    Jorge Neyra\r\n                </div>\r\n                <div>\r\n                    Software Developer (Informatics)\r\n                </div>\r\n                <div>\r\n                    Email: <a href=\"mailto: jorge.neyra@nih.gov\">jorge.neyra@nih.gov</a> (software related queries)\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"profiles-row\">\r\n            <div class=\"profile-image-container\">\r\n                <img [src]=\"jordanImgSrc\">\r\n            </div>\r\n            <div class=\"profile-info-container\">\r\n                <div>\r\n                    Jordan Williams\r\n                </div>\r\n                <div>\r\n                    Postbaccalaureate Fellow (In Vitro ADME)\r\n                </div>\r\n                <div>\r\n                    Email: <a href=\"mailto: jordan.williams2@nih.gov\">jordan.williams2@nih.gov</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"profiles-row\">\r\n            <div class=\"profile-image-container\">\r\n                <img [src]=\"noelImgSrc\">\r\n            </div>\r\n            <div class=\"profile-info-container\">\r\n                <div>\r\n                    Noel Southall\r\n                </div>\r\n                <div>\r\n                    Lead (Informatics)\r\n                </div>\r\n                <div>\r\n                    Email: <a href=\"mailto: southalln@mail.nih.gov\">southalln@mail.nih.gov</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"profiles-row\">\r\n            <div class=\"profile-image-container\">\r\n                <img [src]=\"trungImgSrc\">\r\n            </div>\r\n            <div class=\"profile-info-container\">\r\n                <div>\r\n                    Trung Nguyen\r\n                </div>\r\n                <div>\r\n                    Staff Scientist (Informatics)\r\n                </div>\r\n                <div>\r\n                    Email: <a href=\"mailto: nguyenda@mail.nih.gov\">nguyenda@mail.nih.gov</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"profiles-row\">\r\n            <div class=\"profile-image-container\">\r\n                <img [src]=\"xinImgSrc\">\r\n            </div>\r\n            <div class=\"profile-info-container\">\r\n                <div>\r\n                    Xin Xu\r\n                </div>\r\n                <div>\r\n                    Lead (ADME Group)\r\n                </div>\r\n                <div>\r\n                    Email: <a href=\"mailto: xin.xu3@nih.gov\">xin.xu3@nih.gov</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"resources-container\">\r\n            <h1>\r\n                Resources\r\n            </h1>\r\n            <div class=\"resources-row\">\r\n                <div>\r\n                    <a href=\"https://www.rdkit.org/\" target=\"_blank\">\r\n                        <img [src]=\"rdkitImgSrc\"/>\r\n                    </a>\r\n                </div>\r\n                <div>\r\n                    <a href=\"https://www.python.org/\" target=\"_blank\">\r\n                        <img [src]=\"pythonImgSrc\"/>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <div class=\"resources-row\">\r\n                <div>\r\n                    <a href=\"https://angular.io/\" target=\"_blank\">\r\n                        <img [src]=\"angularImgSrc\"/>\r\n                    </a>\r\n                </div>\r\n                <div>\r\n                    <a href=\"https://lifescience.opensource.epam.com/ketcher/index.html\" target=\"_blank\">\r\n                        <img [src]=\"epamImgSrc\"/>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Injectable, PLATFORM_ID, Inject, HostListener } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { ConfigService } from '../config/config.service';\r\nimport { GAPageView, GAEvent, GAException } from './google-analytics.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n// tslint:disable:no-string-literal\r\nexport class GoogleAnalyticsService {\r\n  private googleAnanlyticsId: string;\r\n  private isActive = false;\r\n  private gtag: any;\r\n\r\n  constructor(\r\n    public configService: ConfigService,\r\n    // tslint:disable-next-line:ban-types\r\n    @Inject(PLATFORM_ID) private platformId: Object\r\n  ) {\r\n    if (isPlatformBrowser(this.platformId)\r\n      && configService.configData\r\n      && configService.configData.googleAnalyticsId) {\r\n      this.googleAnanlyticsId = configService.configData.googleAnalyticsId;\r\n      this.init();\r\n    }\r\n  }\r\n\r\n  init() {\r\n    this.gtag = window['gtag'];\r\n    this.gtag('config', 'G-RM2JHGHYEK', { send_page_view: false });\r\n    this.isActive = true;\r\n  }\r\n\r\n  @HostListener('window:error', ['$event'])\r\n  onGlobalError(event) {\r\n    const errorDescription = `message: ${event.message} | filenname: ${event.filename} | lineno: ${event.lineno} | colno: ${event.colno}`;\r\n    this.sendException(errorDescription);\r\n  }\r\n\r\n  sendPageView(title?: string, path: string = location.href): void {\r\n    if (this.isActive) {\r\n\r\n      const sendFields: GAPageView = {\r\n        page_title: title,\r\n        page_path: path\r\n      };\r\n      console.log(this.gtag);\r\n      this.gtag('config', this.googleAnanlyticsId, sendFields);\r\n    }\r\n  }\r\n\r\n  sendEvent(eventAction: string, eventCategory?: string, eventLabel?: string, eventValue?: number): void {\r\n\r\n    if (this.isActive) {\r\n      const sendFields: GAEvent = {\r\n        event_category: eventCategory,\r\n        event_label: eventLabel,\r\n        value: eventValue\r\n      };\r\n      this.gtag('event', eventAction, sendFields);\r\n    }\r\n  }\r\n\r\n  sendException(exDescription: string, exFatal: boolean = false): void {\r\n    if (this.isActive) {\r\n      const sendFields: GAException = {\r\n        description: exDescription,\r\n        fatal: exFatal\r\n      };\r\n\r\n      this.gtag('event', 'exception', sendFields);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LoadingService } from './loading.service';\r\n\r\n@Component({\r\n  selector: 'adme-loading',\r\n  templateUrl: './loading.component.html',\r\n  styleUrls: ['./loading.component.scss']\r\n})\r\nexport class LoadingComponent implements OnInit {\r\n  isLoading = false;\r\n\r\n  constructor(\r\n    private lodadingService: LoadingService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.lodadingService.isLoading.subscribe(isLoading => {\r\n      this.isLoading = isLoading;\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"progress-bar-container\" *ngIf=\"isLoading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n","// this is a hack to access deploy-url taken from:\r\n// tslint:disable-next-line:comment-format\r\n// https://stackoverflow.com/questions/47885451/angular-cli-build-using-base-href-and-deploy-url-to-access-assets-on-cdn\r\n// while this issues is still outstanding:\r\n// https://github.com/angular/angular-cli/issues/6666\r\n\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nexport const DEPLOY_URL = new InjectionToken<string>('deployUrl');\r\n","import { Component, OnInit, ViewChild, Output, EventEmitter, Inject } from '@angular/core';\r\nimport { Ketcher } from './ketcher.model';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { LoadingService } from '../loading/loading.service';\r\nimport { DEPLOY_URL } from '../utilities/deploy-url';\r\n\r\n@Component({\r\n  selector: 'adme-sketcher',\r\n  templateUrl: './sketcher.component.html',\r\n  styleUrls: ['./sketcher.component.scss']\r\n})\r\nexport class SketcherComponent implements OnInit {\r\n  ketcherSrc: SafeResourceUrl;\r\n  private ketcher: Ketcher;\r\n  @ViewChild('ketcherFrame', { static: true }) ketcherFrame: { nativeElement: HTMLIFrameElement };\r\n  @Output() moleculeInput = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    private domSanatizer: DomSanitizer,\r\n    private loadingService: LoadingService,\r\n    @Inject(DEPLOY_URL) public deployUrl: string\r\n  ) {\r\n    this.ketcherSrc = domSanatizer.bypassSecurityTrustResourceUrl(`${deployUrl}assets/ketcher/ketcher.html`);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.loadingService.setLoadingState(true);\r\n    this.ketcherFrame.nativeElement.onload = () => {\r\n      // tslint:disable-next-line:no-string-literal\r\n      this.ketcher = this.ketcherFrame.nativeElement.contentWindow['ketcher'];\r\n      this.loadingService.setLoadingState(false);\r\n    };\r\n  }\r\n\r\n  addMolecule(): void {\r\n    const smiles = this.ketcher.getSmiles();\r\n    this.moleculeInput.emit(smiles);\r\n  }\r\n\r\n}\r\n","<div class=\"sketcher-container\">\r\n    <iframe id=\"ketcherFrame\" [src]=\"ketcherSrc\" id=\"ketcher-frame\" scrolling=\"no\" #ketcherFrame></iframe>\r\n</div>\r\n<div class=\"actions\">\r\n    <button mat-raised-button color=\"accent\" (click)=\"addMolecule()\">\r\n        Predict\r\n    </button>\r\n</div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'adme-structure-image-dialog',\r\n  templateUrl: './structure-image-dialog.component.html',\r\n  styleUrls: ['./structure-image-dialog.component.scss']\r\n})\r\nexport class StructureImageDialogComponent implements OnInit {\r\n  smiles: string;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.smiles = data.smiles;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<img admeStructureImage [entityId]=\"smiles\" />\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'adme-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.scss']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>page-not-found works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PredictionsComponent } from './predictions/predictions.component';\r\nimport { MethodComponent } from './method/method.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent,\r\n    data: {\r\n      pageTitle: 'home'\r\n    }\r\n  },\r\n  {\r\n    path: 'predictions',\r\n    component: PredictionsComponent,\r\n    data: {\r\n      pageTitle: 'predictions'\r\n    }\r\n  },\r\n  {\r\n    path: 'models/:model',\r\n    component: MethodComponent,\r\n    data: {\r\n      pageTitle: 'model'\r\n    }\r\n  },\r\n  {\r\n    path: 'contact',\r\n    component: ContactComponent,\r\n    data: {\r\n      pageTitle: 'contact'\r\n    }\r\n  },\r\n  {\r\n    path: '**',\r\n    component: HomeComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Directive, ElementRef, AfterViewInit, Input } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ConfigService } from '../config/config.service';\r\n\r\n@Directive({\r\n  selector: '[admeStructureImage]'\r\n})\r\nexport class StructureImageDirective implements AfterViewInit {\r\n  private privateEntityId: string;\r\n  private privateSize?: number;\r\n  private privateStereo = false;\r\n  private imageElement: HTMLImageElement;\r\n  private isAfterViewInit = false;\r\n  private privateAtomMaps?: Array<number>;\r\n  private privateVersion?: number;\r\n  private apiBaseUrl: string;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private http: HttpClient,\r\n    private configService: ConfigService\r\n  ) {\r\n    this.imageElement = this.el.nativeElement as HTMLImageElement;\r\n    this.apiBaseUrl = configService.configData.apiBaseUrl;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.isAfterViewInit = true;\r\n    this.setImageSrc();\r\n  }\r\n\r\n  @Input()\r\n  set version(version: number) {\r\n    if (version !== this.privateVersion) {\r\n      this.privateVersion = version;\r\n      this.setImageSrc();\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set entityId(entityId: string) {\r\n    if (entityId !== this.privateEntityId) {\r\n      this.privateEntityId = entityId;\r\n      this.setImageSrc();\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set size(size: number) {\r\n    if (size !== this.privateSize) {\r\n      this.privateSize = size;\r\n      this.setImageSrc();\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set stereo(showStereo: boolean) {\r\n    if (showStereo !== this.privateStereo) {\r\n      this.privateStereo = showStereo;\r\n      this.setImageSrc();\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set atomMaps(atomMaps: Array<number>) {\r\n    if (atomMaps !== this.privateAtomMaps) {\r\n      this.privateAtomMaps = atomMaps;\r\n      this.setImageSrc();\r\n    }\r\n  }\r\n\r\n  private setImageSrc(): void {\r\n    if (this.isAfterViewInit) {\r\n      const srcUrl = `${this.apiBaseUrl}api/v1/structure_image/${encodeURIComponent(this.privateEntityId)}`;\r\n      this.imageElement.src = srcUrl;\r\n      this.imageElement.alt = 'structure image';\r\n    }\r\n  }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { DEPLOY_URL } from './app/utilities/deploy-url';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nconst deployUrl = (() => {\r\n  const scripts = document.getElementsByTagName('script');\r\n  const index = scripts.length - 1;\r\n  const mainScript = scripts[index];\r\n  return mainScript.src.replace(/main.*?\\.js$/, '');\r\n})();\r\n\r\nconst DEPLOY_URL_PROVIDER = {\r\n  provide: DEPLOY_URL,\r\n  useValue: deployUrl,\r\n};\r\n\r\nplatformBrowserDynamic([DEPLOY_URL_PROVIDER])\r\n  .bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}